// Code generated by "stringer -type ErrCode -linecomment errno.go"; DO NOT EDIT.

package errno

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SuccessCode-0]
	_ = x[ServiceErrCode-10001]
	_ = x[ParamErrCode-10002]
	_ = x[AuthorizationFailedErrCode-10003]
	_ = x[UserAlreadyExistErrCode-10004]
	_ = x[UserNotExistErrCode-10005]
	_ = x[InvalidActionTypeErrCode-10006]
	_ = x[VideoNotFoundErrCode-10007]
	_ = x[RecodeNotFoundCode-10008]
	_ = x[NotMotifiedCode-10009]
	_ = x[WrongPasswordCode-10010]
	_ = x[UnknowUserNameCode-10011]
	_ = x[BadRequestCode-10012]
	_ = x[InvalidOperationCode-10013]
	_ = x[AlreadyLikedCode-10014]
	_ = x[AlreadyFollowedCode-10015]
}

const (
	_ErrCode_name_0 = "Success"
	_ErrCode_name_1 = "Service not avaliableWrong parameterAuthorization failedUser existedUser not existsInvalid action typeVideo not foundRecode not foundNot motifiedWrong passwordNot registedNot registedInvalid OperationAlready likedAlready followed"
)

var (
	_ErrCode_index_1 = [...]uint8{0, 21, 36, 56, 68, 83, 102, 117, 133, 145, 159, 171, 183, 200, 213, 229}
)

func (i ErrCode) String() string {
	switch {
	case i == 0:
		return _ErrCode_name_0
	case 10001 <= i && i <= 10015:
		i -= 10001
		return _ErrCode_name_1[_ErrCode_index_1[i]:_ErrCode_index_1[i+1]]
	default:
		return "ErrCode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
