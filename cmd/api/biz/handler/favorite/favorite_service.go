// Code generated by hertz generator.

package favorite

import (
	"context"
	favorite "douyin/cmd/api/biz/model/favorite"
	"douyin/cmd/api/pkg/errhandler"
	"douyin/shared/config"
	kfavorite "douyin/shared/rpc/kitex_gen/favorite"
	"douyin/shared/utils/errno"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/common/hlog"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// FavoriteAction .
// @router /douyin/favorite/action [POST]
func FavoriteAction(ctx context.Context, c *app.RequestContext) {
	var err error
	var req favorite.DouyinFavoriteActionRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		errhandler.ErrorResponse(err.Error(), errno.BadRequestCode, c)
		return
	}

	userId := ctx.Value("uid").(int64)

	resp, err := config.Clients.Favorite.FavoriteAction(
		ctx,
		&kfavorite.DouyinFavoriteActionRequest{
			UserId:     userId,
			VideoId:    req.VideoID,
			ActionType: req.ActionType,
		})
	if err != nil {
		hlog.Error("favorite:", err)
		errhandler.RPCCallErrorResponse("favorite",
			errno.ServiceErrCode, c)
		return
	}

	c.JSON(consts.StatusOK, resp)
}

// FavoriteList .
// @router /douyin/favorite/list [GET]
func FavoriteList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req favorite.DouyinFavoriteListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		errhandler.ErrorResponse(err.Error(), errno.BadRequestCode, c)
		return
	}

	userId := ctx.Value("uid").(int64)

	resp, err := config.Clients.Favorite.FavoriteList(
		ctx,
		&kfavorite.DouyinFavoriteListRequest{
			UserId: userId,
		})
	if err != nil {
		hlog.Error("favorite:", err)
		errhandler.RPCCallErrorResponse("favorite",
			errno.ServiceErrCode, c)
		return
	}

	c.JSON(consts.StatusOK, resp)
}
