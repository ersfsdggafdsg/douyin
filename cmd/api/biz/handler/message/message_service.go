// Code generated by hertz generator.

package message

import (
	"context"
	"douyin/shared/utils/errno"

	message "douyin/cmd/api/biz/model/message"
	"douyin/cmd/api/pkg/errhandler"
	"douyin/shared/config"
	kmessage "douyin/shared/rpc/kitex_gen/message"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/common/hlog"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// MessageList .
// @router /douyin/message/chat [GET]
func MessageList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req message.DouyinMessageChatRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		errhandler.ErrorResponse(err.Error(), errno.BadRequestCode, c)
		return
	}

	userId := ctx.Value("uid").(int64)

	resp, err := config.Clients.Message.MessageList(
		ctx,
		&kmessage.DouyinMessageChatRequest{
			UserId:     userId,
			ToUserId:   req.ToUserID,
			PreMsgTime: req.PreMsgTime,
		})
	if err != nil {
		hlog.Error("message:", err)
		errhandler.RPCCallErrorResponse("message",
			errno.ServiceErrCode, c)
		return
	}

	c.JSON(consts.StatusOK, resp)
}

// MessageAction .
// @router /douyin/message/action [POST]
func MessageAction(ctx context.Context, c *app.RequestContext) {
	var err error
	var req message.DouyinMessageActionRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		errhandler.ErrorResponse(err.Error(), errno.BadRequestCode, c)
		return
	}

	userId := ctx.Value("uid").(int64)

	resp, err := config.Clients.Message.MessageAction(
		ctx,
		&kmessage.DouyinMessageActionRequest{
			UserId:     userId,
			ToUserId:   req.ToUserID,
			ActionType: req.ActionType,
			Content:    req.Content,
		})
	if err != nil {
		hlog.Error("message:", err)
		errhandler.RPCCallErrorResponse("message",
			errno.ServiceErrCode, c)
		return
	}

	c.JSON(consts.StatusOK, resp)
}
