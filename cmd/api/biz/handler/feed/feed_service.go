// Code generated by hertz generator.

package feed

import (
	"context"
	"douyin/shared/config"
	kfeed "douyin/shared/rpc/kitex_gen/feed"
	"douyin/shared/utils/errno"
	"strconv"

	"douyin/cmd/api/pkg/errhandler"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/common/hlog"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// Feed .
// @router /douyin/feed [GET]
func Feed(ctx context.Context, c *app.RequestContext) {
	// WARN: 根据给定的IDL，参数中可能没有latest_time，所以使用下面的提取方法。
	var err error
	latestTime := int64(0)
	str := c.Query("latest_time")
	if str != "" {
		latestTime, err = strconv.ParseInt(str, 10, 64)
		if err != nil {
			errhandler.ErrorResponse(err.Error(), errno.BadRequestCode, c)
			return
		}
	}

	userId := ctx.Value("uid").(int64)

	resp, err := config.Clients.Feed.Feed(
		ctx,
		&kfeed.DouyinFeedRequest{
			UserId:     userId,
			LatestTime: latestTime,
		})
	if err != nil {
		hlog.Error("feed", err)
		errhandler.RPCCallErrorResponse("feed",
			errno.ServiceErrCode, c)
		return
	}

	c.JSON(consts.StatusOK, resp)
}
