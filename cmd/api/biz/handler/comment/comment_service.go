// Code generated by hertz generator.

package comment

import (
	"context"
	comment "douyin/cmd/api/biz/model/comment"
	"douyin/cmd/api/pkg/errhandler"
	"douyin/shared/config"
	kcomment "douyin/shared/rpc/kitex_gen/comment"
	"douyin/shared/utils/errno"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/common/hlog"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// CommentAction .
// @router /douyin/comment/action [POST]
func CommentAction(ctx context.Context, c *app.RequestContext) {
	// WARN: 必须填上comment_id，否则下面的BindAndValidate会出错！
	var err error
	var req comment.DouyinCommentActionRequest
	err = c.Bind(&req)
	c.BindAndValidate(&req)
	if err != nil {
		errhandler.ErrorResponse(err.Error(), errno.BadRequestCode, c)
		return
	}

	userId := ctx.Value("uid").(int64)

	resp, err := config.Clients.Comment.CommentAction(
		ctx,
		&kcomment.DouyinCommentActionRequest{
			UserId:      userId,
			VideoId:     req.VideoID,
			ActionType:  req.ActionType,
			CommentText: req.CommentText,
			CommentId:   req.CommentID,
		})
	if err != nil {
		hlog.Error("comment:", err)
		errhandler.RPCCallErrorResponse("comment",
			errno.ServiceErrCode, c)
		return
	}

	c.JSON(consts.StatusOK, resp)
}

// CommentList .
// @router /douyin/comment/list [GET]
func CommentList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req comment.DouyinCommentListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		errhandler.ErrorResponse(err.Error(), errno.BadRequestCode, c)
		return
	}

	userId := ctx.Value("uid").(int64)

	resp, err := config.Clients.Comment.CommentList(
		ctx,
		&kcomment.DouyinCommentListRequest{
			UserId:  userId,
			VideoId: req.VideoID,
		})
	if err != nil {
		hlog.Error("comment:", err)
		errhandler.RPCCallErrorResponse("comment",
			errno.ServiceErrCode, c)
		return
	}

	c.JSON(consts.StatusOK, resp)
}
